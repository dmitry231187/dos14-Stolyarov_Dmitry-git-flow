chartName: bpzb-authz
helm_chart_version: 1.0.0
labels:
  bank: bpzb
  env: prd
  app: authz
nginx:
  name: nginx
  image: nginx:1.25.3
  ports:
    name: http
    containerPort: 80
    protocol: TCP
  volumeMounts:
    name: nginx-config
    mountPath: /etc/nginx
replicaCount: 2
strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 2
envs:
- name: PG_HOST
  value: omegabank-rds-tf.cearikylb8tb.eu-west-1.rds.amazonaws.com
- name: PG_PORT
  value: '5432'
- name: PG_DB
  value: bpzb
- name: PG_USER
  valueFrom:
    secretKeyRef:
      key: PG_USER
      name: bpzb-db-creds
- name: PG_PASSWORD
  valueFrom:
    secretKeyRef:
      key: PG_PASSWORD
      name: bpzb-db-creds
image:
  repository: dmitry231187/dos14-bpzb_authz
  pullPolicy: IfNotPresent
  tag: 617c4e23daf9706e6e82e97fd5e28b8079b775f7
imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''
serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: authz-serviceaccount
podAnnotations: {}
podLabels: {}
podSecurityContext: {}
securityContext: {}
service:
  type: ClusterIP
  port: 80
  protocol: TCP
  targetPort: 80
  name: http
  path: /api/v1/authz/health_check
ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/service-upstream: 'true'
    nginx.ingress.kubernetes.io/use-regex: 'true'
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    cert-manager.io/cluster-issuer: letsencrypt-prod
  hosts:
  - host: api.bpzb.smodata.net
    paths:
    - path: /authz(.*)
      pathType: ImplementationSpecific
  tls:
  - secretName: bpzb
    hosts:
    - api.bpzb.smodata.net
resources: {}
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
volumes:
- configMap:
    name: authz-nginx-config
  name: nginx-config
volumeMounts: []
nodeSelector: {}
tolerations: []
affinity: {}
