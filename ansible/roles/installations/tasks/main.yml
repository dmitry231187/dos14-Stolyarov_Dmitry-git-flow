- name: Check flag installed git {{ git_version }}
  become: true
  stat:
    path: /home/{{ user_name }}/git-{{ git_version }}_exists
  register: git_result
- name: Install Git
  block:
    - name: Install packages needed for installing git
      apt: 
        pkg: ['libz-dev', 'libssl-dev', 'libcurl4-gnutls-dev', 'libexpat1-dev', 'gettext', 'cmake', 'gcc']
        state: present
        update_cache: true
    - name: Download and unarchive git {{ git_version }} to /tmp/git-{{ git_version }}
      unarchive:
        src: https://github.com/git/git/archive/refs/tags/v{{ git_version }}.tar.gz
        dest: /tmp/
        remote_src: true
    - name: Make git {{ git_version }}
      shell: make chdir=/tmp/git-{{ git_version }} prefix=/usr/local all
    - name: Install git {{ git_version }}
      shell: make chdir=/tmp/git-{{ git_version }} prefix=/usr/local install
    - name: Create flag Git installed
      file:
        path: /home/{{ user_name }}/git-{{ git_version }}_exists
        state: touch
    - name: Delete tmp files
      file:
        path: /tmp/git-{{ git_version }}
        state: absent
  when: git_result.stat.exists == False
  become: true
- name: Check flag installed docker
  become: true
  stat:
    path: /home/{{ user_name }}/docker_exists
  register: docker_result
- name: Install Docker
  block:
    - name: Install packages to allow apt to use a repository over HTTPS
      apt: 
        pkg: ['ca-certificates', 'gnupg']
        state: present
        update_cache: true
    - name:
      become: true
      file:
        path: /etc/apt/keyrings
        owner: root
        group: root
        mode: '0755'
        state: directory
    - name: Add Dockerâ€™s official GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        keyring: /etc/apt/keyrings/docker.gpg
        state: present
    - name: Add Docker Repository
      apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
    - name: Update apt-cache
      apt:
        update_cache: true
    - name: Install Docker Engine, containerd, and Docker Compose
      apt:
        pkg: ['docker-ce', 'docker-ce-cli', 'containerd.io', 'docker-buildx-plugin', 'docker-compose-plugin', 'docker-compose']
        state: present
    - name: Create flag Docker installed
      file:
        path: /home/{{ user_name }}/docker_exists
        state: touch
  when: docker_result.stat.exists == False
  become: true

